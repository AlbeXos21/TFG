{"version":3,"file":"react-fitty.cjs.production.min.js","sources":["../src/index.tsx"],"sourcesContent":["import React from 'react';\nimport fitty from 'fitty';\n\nconst fullWidth = { width: '100%' };\n\n// todo support style and className on Wrapper(root div) and Ref div\n// one solution could be adding style prop for root and another styleProp to ref\n\n/**\n * Snugly resizes text to fit its parent container width\n */\nexport const ReactFitty = React.forwardRef<\n    HTMLElement,\n    React.HTMLAttributes<HTMLDivElement> & { children?: React.ReactNode; minSize?: number; maxSize?: number; wrapText?: boolean }\n>(function ReactFitty(\n    { children, minSize = 12, maxSize = 512, wrapText = false, ...rest },\n    ref: React.MutableRefObject<any> | ((instance: any) => void) | null\n) {\n    const internalRef = React.useRef<HTMLDivElement>(null);\n\n    /**\n     * Need to use the correct ref because the component ref can contain a className that dynamically\n     * change the text size\n     */\n    const correctRef = (ref as React.MutableRefObject<HTMLDivElement>) || internalRef;\n\n    React.useLayoutEffect(() => {\n        const effectRef = (ref as React.MutableRefObject<HTMLDivElement>) || internalRef;\n        const fitInstance = fitty(effectRef!.current, {\n            minSize: minSize,\n            maxSize: maxSize,\n            multiLine: wrapText,\n            observeMutations: {\n                subtree: true,\n                childList: true,\n                characterData: true,\n                attributeFilter: ['class'],\n            },\n        });\n\n        // wait browser finish text width calc with relative properties like rem and %\n        // then, fit text in the next animation frame\n        // maybe that needed to be handled in fitty?\n        setTimeout(() => {\n            fitInstance.fit();\n        }, 0);\n\n        return () => {\n            fitty(effectRef.current!).unsubscribe();\n        };\n    }, []);\n\n    // fitty need an extra div to avoid parent padding issue\n    // see https://github.com/rikschennink/fitty/issues/20\n    return (\n        <div style={fullWidth}>\n            <div {...rest} ref={correctRef as React.MutableRefObject<HTMLDivElement>}>\n                {children}\n            </div>\n        </div>\n    );\n});\n"],"names":["fullWidth","width","React","forwardRef","children","minSize","maxSize","wrapText","rest","ref","internalRef","useRef","correctRef","useLayoutEffect","effectRef","fitInstance","fitty","current","multiLine","observeMutations","subtree","childList","characterData","attributeFilter","setTimeout","fit","unsubscribe","style"],"mappings":"0LAGA,MAAMA,EAAY,CAAEC,MAAO,2BAQDC,EAAMC,YAG9B,UACEC,SAAEA,EAAFC,QAAYA,EAAU,GAAtBC,QAA0BA,EAAU,IAApCC,SAAyCA,GAAW,KAAUC,GAC9DC,SAEMC,EAAcR,EAAMS,OAAuB,MAM3CC,EAAcH,GAAkDC,SAEtER,EAAMW,gBAAgB,WACZC,EAAaL,GAAkDC,EAC/DK,EAAcC,EAAMF,EAAWG,QAAS,CAC1CZ,QAASA,EACTC,QAASA,EACTY,UAAWX,EACXY,iBAAkB,CACdC,SAAS,EACTC,WAAW,EACXC,eAAe,EACfC,gBAAiB,CAAC,mBAO1BC,WAAW,KACPT,EAAYU,OACb,GAEI,KACHT,EAAMF,EAAUG,SAAUS,gBAE/B,IAKCxB,uBAAKyB,MAAO3B,GACRE,uCAASM,GAAMC,IAAKG,IACfR"}